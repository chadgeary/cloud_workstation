---
- name: workstation.yml
  hosts: localhost
  become: True
  become_user: root
  tasks:

    - name: apache2, xrdp, gnome, and guacamole/docker packages
      apt:
        pkg:
          - apache2
          - docker.io
          - python-pip
          - xfce4
          - xfce4-terminal
          - xrdp
          - ssl-cert
        state: latest
        update_cache: yes
      retries: 6
      delay: 20
      register: packages_install
      until: packages_install is not failed

    - name: install docker python package for ansible
      pip:
        executable: /usr/bin/pip
        name: docker

    - name: add xrdp user to ssl-cert group
      user:
        name: xrdp
        groups: ssl-cert
        append: yes

    - name: set xrdp listen local (docker) only
      lineinfile:
        path: /etc/xrdp/xrdp.ini
        insertbefore: '^; tcp port to listen'
        line: address=172.17.0.1
      register: xrdp_ini

    - name: disable permit root rdp
      lineinfile:
        path: /etc/xrdp/sesman.ini
        regexp: '^AllowRootLogin='
        line: 'AllowRootLogin=False'
      register: sesman_ini

    - name: global xsession configuration file
      copy:
        src: xsession
        dest: /opt/xsession
        owner: xrdp
        group: xrdp
        mode: '0555'

    - name: set xrdp sesman systemd unit to wait for docker
      lineinfile:
        path: /lib/systemd/system/xrdp-sesman.service
        regexp: '^After=network.target'
        line: 'After=network.target docker.service'

    - name: enable / start docker and xrdp
      systemd:
        name: "{{ item }}"
        state: started
        enabled: yes
        daemon_reload: yes
      with_items:
        - docker
        - xrdp

    - name: restart xrdp if inis changed
      systemd:
        name: xrdp
        state: restarted
      when: xrdp_ini.changed or sesman_ini.changed

    - name: Guacamole data dir
      file:
        path: /opt/guacamole
        state: directory
        owner: root
        group: root
        mode: '0750'

    - name: Determine db passwords set (root)
      stat:
        path: /opt/guacamole/guacdb_root_file
      register: guacdb_root_file

    - name: Determine db passwords set (guacamole)
      stat:
        path: /opt/guacamole/guacdb_guacamole_file
      register: guacdb_guacamole_file

    - name: Create db passwords when not set (root)
      shell: |
        head /dev/urandom | tr -dc A-Za-z0-9 | head -c 20 > /opt/guacamole/guacdb_root_file
      when: guacdb_root_file.stat.exists|bool == False

    - name: Create db passwords when not set (guacamole)
      shell: |
        head /dev/urandom | tr -dc A-Za-z0-9 | head -c 20 > /opt/guacamole/guacdb_guacamole_file
      when: guacdb_guacamole_file.stat.exists|bool == False

    - name: Register db passwords
      shell: |
        cat /opt/guacamole/guacdb_root_file
      register: guacdb_root_pass

    - name: Register db pass (guacamole)
      shell: |
        cat /opt/guacamole/guacdb_guacamole_file
      register: guacdb_guacamole_pass

    - name: Docker Volume (db)
      docker_volume:
        name: guacdb

    - name: Docker Network
      docker_network:
        name: guacnet
        ipam_config:
          - subnet: "{{ guacnet_cidr }}"

    - name: Docker Container - guacd
      docker_container:
        name: guacd
        image: guacamole/guacd
        networks:
          - name: guacnet
            ipv4_address: "{{ guacnet_guacd }}"
        restart_policy: "always"

    - name: Docker Container - guacdb
      docker_container:
        name: guacdb
        env:
          MYSQL_ROOT_PASSWORD: "{{ guacdb_root_pass.stdout }}"
        image: mysql/mysql-server
        networks:
          - name: guacnet
            ipv4_address: "{{ guacnet_guacdb }}"
        purge_networks: yes
        restart_policy: "always"
        volumes:
          - guacdb:/var/lib/mysql

    - name: Docker Container - guacamole
      docker_container:
        name: guacamole
        env:
          MYSQL_HOSTNAME: "{{ guacnet_guacdb }}"
          MYSQL_PORT: "3306"
          MYSQL_DATABASE: "guacamole_db"
          MYSQL_USER: "guacamole_user"
          MYSQL_PASSWORD: "{{ guacdb_guacamole_pass.stdout }}"
          GUACD_HOSTNAME: "{{ guacnet_guacd }}"
          GUACD_PORT: "4822"
          GUACD_LOG_LEVEL: "debug"
        image: guacamole/guacamole
        links:
          - "guacd:guacd"
          - "guacdb:mysql"
        networks:
          - name: guacnet
            ipv4_address: "{{ guacnet_guacamole }}"
        ports:
          - "8080:8080"
        purge_networks: yes
        restart_policy: "always"

    - name: Determine if (One Time) was done
      stat:
        path: /opt/guacamole/db_conf_done
      register: guacdb_one_time_done

    - name: Set my.cnf and dbpass.sql
      template:
        src: "{{ item }}"
        dest: "/opt/guacamole/{{ item }}"
        owner: root
        group: root
        mode: '0400'
      with_items:
        - my.cnf
        - dbpass.sql
      when: guacdb_one_time_done.stat.exists|bool == False

    - name: Wait for mysqld on 3306
      shell: |
        docker logs guacdb 2>&1 | grep --quiet 'port: 3306'
      register: wait_for_mysqld
      until: wait_for_mysqld.rc == 0
      retries: 15
      delay: 15
      when: guacdb_one_time_done.stat.exists|bool == False

    - name: Configure DB (One Time)
      shell: |
        # credentials
        docker cp /opt/guacamole/my.cnf guacdb:/root/.my.cnf
        docker cp /opt/guacamole/dbpass.sql guacdb:dbpass.sql
        docker exec -i guacdb /bin/bash -c "mysql < dbpass.sql"
        touch /opt/guacamole/one_time_done
        # schema
        docker exec -i guacamole /bin/bash -c 'cat /opt/guacamole/mysql/schema/*.sql' > /opt/guacamole/dbschema.sql
        docker cp /opt/guacamole/dbschema.sql guacdb:dbschema.sql
        docker exec -i guacdb /bin/bash -c "mysql guacamole_db < dbschema.sql"
      when: guacdb_one_time_done.stat.exists|bool == False

    - name: Set One Time
      file:
        path: /opt/guacamole/db_conf_done
        state: touch

    - name: Enable Apache2 Modules for proxy and ssl
      apache2_module:
        name: "{{ item }}"
        state: present
      with_items:
        - headers
        - proxy
        - proxy_http
        - ssl
      register: apache_modules

    - name: Proxy Configuration for Apache
      template:
        src: 8080-web-proxy.conf
        dest: /etc/apache2/sites-enabled/8080-web-proxy.conf
        owner: root
        group: root
        mode: 0444
      register: proxy_conf

    - name: Apache2 Enabled / Restarted
      systemd:
        name: apache2
        state: restarted
        enabled: yes
      when: apache_modules.changed or proxy_conf.changed

# The following sets the default AMI user (ubuntu)'s password from a random string
# The password is saved to a Guacamole session
    - name: Determine User and Session one-time setup complete
      stat:
        path: /opt/guacamole/user_session_done
      register: usersession_one_time_done

    - name: Generate Ubuntu password (One Time)
      shell: |
        head /dev/urandom | tr -dc A-Za-z0-9 | head -c 20 > /opt/guacamole/ubuntu_file
      when: usersession_one_time_done.stat.exists|bool == False

    - name: Register Ubuntu password (One Time)
      shell: |
        cat /opt/guacamole/ubuntu_file
      register: ubuntu_pass
      when: usersession_one_time_done.stat.exists|bool == False

    - name: Set Ubuntu password (One Time)
      user:
        name: ubuntu
        password: "{{ ubuntu_pass.stdout|password_hash('sha512') }}"
      when: usersession_one_time_done.stat.exists|bool == False

    - name: Auth and create Session (One Time)
      shell: |
        # Auth for token
        GUAC_TOKEN=$(curl 'http://127.0.0.1:8080/guacamole/api/tokens' -c cookies.tmp -H 'Connection: keep-alive' -H 'Accept: application/json, text/plain, */*' -H 'Content-Type: application/x-www-form-urlencoded' -H 'Origin: http://127.0.0.1:8080' -H 'Sec-Fetch-Site: same-origin' -H 'Sec-Fetch-Mode: cors' -H 'Sec-Fetch-Dest: empty' -H 'Referer: http://127.0.0.1:8080/guacamole/' -H 'Accept-Language: en-US,en;q=0.9' --data-raw 'username=guacadmin&password=guacadmin' --compressed --insecure --silent | awk -F'"' '{ print $4 }')

        # Add local connection
        curl "http://127.0.0.1:8080/guacamole/api/session/data/mysql/connections?token=$GUAC_TOKEN" -H 'Connection: keep-alive' -H 'Accept: application/json, text/plain, */*' -H 'Content-Type: application/json;charset=UTF-8' -H 'Origin: http://127.0.0.1:8080' -H 'Sec-Fetch-Site: same-origin' -H 'Sec-Fetch-Mode: cors' -H 'Sec-Fetch-Dest: empty' -H 'Referer: http://127.0.0.1:8080/guacamole/' -H 'Accept-Language: en-US,en;q=0.9' --data-binary '{"parentIdentifier":"ROOT","name":"cloud_workstation","protocol":"rdp","parameters":{"port":"3389","read-only":"","swap-red-blue":"","cursor":"","color-depth":"","clipboard-encoding":"","disable-copy":"","disable-paste":"","dest-port":"","recording-exclude-output":"","recording-exclude-mouse":"","recording-include-keys":"","create-recording-path":"","enable-sftp":"","sftp-port":"","sftp-server-alive-interval":"","sftp-disable-download":"","sftp-disable-upload":"","enable-audio":"","wol-send-packet":"","wol-wait-time":"","security":"","disable-auth":"","ignore-cert":"true","gateway-port":"","server-layout":"","timezone":null,"console":"","width":"","height":"","dpi":"","resize-method":"","console-audio":"","disable-audio":"","enable-audio-input":"","enable-printing":"","enable-drive":"","disable-download":"","disable-upload":"","create-drive-path":"","enable-wallpaper":"","enable-theming":"","enable-font-smoothing":"","enable-full-window-drag":"","enable-desktop-composition":"","enable-menu-animations":"","disable-bitmap-caching":"","disable-offscreen-caching":"","disable-glyph-caching":"","preconnection-id":"","hostname":"172.17.0.1","username":"ubuntu","password":"{{ubuntu_pass.stdout}}"},"attributes":{"max-connections":"1","max-connections-per-user":"1","weight":"","failover-only":"","guacd-port":"4822","guacd-encryption":"","guacd-hostname":"{{ guacnet_guacd }}"}}' --compressed --insecure
      when: usersession_one_time_done.stat.exists|bool == False

    - name: Remove Ubuntu password file
      file:
        path: /opt/guacamole/ubuntu_file
        state: absent

    - name: Set User and Session one-time setup complete
      file:
        path: /opt/guacamole/user_session_done
        state: touch
